(function(){function e(e){if(a.projectBranches.hasOwnProperty(e))var t=a.projectBranches[e].split(",");else t=!1;return t}function t(e){for(var t={},n=a.projectBranches[e].split(","),r=0;r<n.length;r++)t[n[r]]=a.projectMap[e][n[r]][1],"Stop"==t[n[r]]&&(t[n[r]]=0);return t}const n=window.RIBC={},r=n.admin={};n.init=function(e=!1){return new Promise((t,r)=>{Promise.all([n.refreshGeneralData(e)]).then(e=>t(e)).catch(e=>r(e))})},n.refreshObjectData=(()=>new Promise((e,t)=>{floCloudAPI.requestObjectData("RIBC").then(t=>{floGlobals.appObjects.RIBC||(floGlobals.appObjects.RIBC={});var n=["projectMap","projectBranches","projectTaskDetails","projectDetails","internList","internRating","internsAssigned","projectTaskStatus"];n.forEach(e=>{floGlobals.appObjects.RIBC[e]||(floGlobals.appObjects.RIBC[e]={}),a[e]=floGlobals.appObjects.RIBC[e]}),e("Object Data Refreshed Successfully")}).catch(e=>t(e))})),n.refreshGeneralData=(e=>new Promise((t,n)=>{var r=["InternUpdates"],a=[],s=[];(e?r:s).push("TaskRequests","InternRequests");let o=[];for(let e of r)o.push(floCloudAPI.requestGeneralData(e));for(let e of a)o.push(floCloudAPI.requestGeneralData(e,{senderID:floGlobals.subAdmins}));for(let e of s)o.push(floCloudAPI.requestGeneralData(e,{senderID:floDapps.user.id}));Promise.all(o).then(e=>t("General Data Refreshed Successfully")).catch(e=>n(e))}));const a={};n.applyForIntern=(e=>new Promise((t,n)=>{floCloudAPI.sendGeneralData(e,"InternRequests").then(e=>t(e)).catch(e=>n(e))})),n.postInternUpdate=(e=>new Promise((t,n)=>{floCloudAPI.sendGeneralData(e,"InternUpdates").then(e=>t(e)).catch(e=>n(e))})),n.getInternUpdates=function(e=null){let t=Object.values(floGlobals.generalDataset("InternUpdates")).map(e=>({floID:e.senderID,update:e.message,time:e.vectorClock.split("_")[0],note:e.note}));return t=t.filter(e=>e.floID in a.internList),t.reverse(),e&&e<t.length&&(t=t.slice(0,e)),t},r.commentInternUpdate=((e,t)=>new Promise((n,r)=>{if(!(e in floGlobals.generalDataset("InternUpdates")))return r("Intern update not found");floCloudAPI.noteApplicationData(e,t).then(e=>n(e)).catch(e=>r(e))})),n.applyForTask=(e=>new Promise((t,n)=>{floCloudAPI.sendGeneralData(e,"TaskRequests").then(e=>t(e)).catch(e=>n(e))})),n.getProjectList=(()=>Object.keys(a.projectMap)),n.getProjectDetails=(e=>a.projectDetails[e]),n.getProjectMap=(e=>a.projectMap[e]),n.getProjectBranches=(t=>e(t)),n.getTaskDetails=((e,t,n)=>a.projectTaskDetails[e+"_"+t+"_"+n]),n.getTaskStatus=((e,t,n)=>a.projectTaskStatus[e+"_"+t+"_"+n]),n.getInternList=(()=>a.internList),n.getInternRating=(e=>a.internRating[e]),n.getAssignedInterns=((e,t,n)=>a.internsAssigned[e+"_"+t+"_"+n]),n.getAllTasks=(()=>a.projectTaskDetails),r.updateObjects=(()=>new Promise((e,t)=>{floCloudAPI.updateObjectData("RIBC").then(t=>e(t)).catch(e=>t(e))})),r.resetObjects=(()=>new Promise((e,t)=>{floCloudAPI.resetObjectData("RIBC").then(t=>e(t)).catch(e=>t(e))})),r.addProjectDetails=function(e,t){if(!(e in a.projectMap))return"Project not Found!";if(e in a.projectDetails&&"object"==typeof e&&"object"==typeof t)for(let n in t)a.projectDetails[e][n]=t[n];else a.projectDetails[e]=t;return"added project details for "+e},n.getInternRequests=function(e=!0){var t=Object.values(floGlobals.generalDataset("InternRequests")).map(e=>({floID:e.senderID,vectorClock:e.vectorClock,details:e.message,status:e.note}));return t=t.filter(e=>!(e.floID in a.internList)),e&&(t=t.filter(e=>!e.status)),t},r.processInternRequest=function(e,t=!0){let n=floGlobals.generalDataset("InternRequests")[e];return n?(r=t&&s(n.senderID,n.message[0])?"Accepted":"Rejected",floCloudAPI.noteApplicationData(e,r).then(e=>null).catch(e=>console.error(e)),r):"Request not found";var r};const s=r.addIntern=function(e,t){return!(e in a.internList)&&(a.internList[e]=t,a.internRating[e]=1,!0)};r.updateInternRating=function(e,t=0){return e in a.internList?(a.internRating[e]+=t,"Intern rating Updated"):"Intern not found!"},n.getTaskRequests=function(e=!0){var t=Object.values(floGlobals.generalDataset("TaskRequests")).map(e=>({floID:e.senderID,vectorClock:e.vectorClock,details:e.message,status:e.note}));return e&&(t=t.filter(e=>!e.status)),t},r.processTaskRequest=function(e,t=!0){let n=floGlobals.generalDataset("TaskRequests")[e];if(!n)return"Request not found";const{message:{taskId:r,name:a},senderID:i}=n,[c,p,l]=r.split("_");var u;return s(i,a),u=t&&o(i,c,p,l)?"Accepted":"Rejected",u};const o=r.assignInternToTask=function(e,t,n,r){var s=t+"_"+n+"_"+r;return Array.isArray(a.internsAssigned[s])||(a.internsAssigned[s]=[]),!a.internsAssigned[s].includes(e)&&(a.internsAssigned[s].push(e),!0)};r.unassignInternFromTask=function(e,t,n,r){const s=t+"_"+n+"_"+r;a.internsAssigned[s]=a.internsAssigned[s].filter(t=>t!=e)},r.putTaskStatus=function(e,t,n,r){a.projectTaskStatus[t+"_"+n+"_"+r]=e},r.createProject=function(e){return e in a.projectMap?"Project Name already exists":(i(e),"Project Create: "+e)},r.copyBranchtoNewProject=function(e,t,n,r,s,o){if("mainLine"==t)return"You cannot change mainLine";if(0==a.projectMap.hasOwnProperty(n))return"The project does not exist";if(0==a.projectMap[n].hasOwnProperty(c))return"The branch does not exist";if(s>o)return"Startpoint cannot be later than endpoint";var c=i(n,r,s,o);a.projectMap[n][c]=a.projectMap[e][t].slice(),a.projectMap[n][c][0]="undefined"==r?"mainLine":"newBranchConnection","undefined"!=s&&(a.projectMap[n][c][2]=s),"undefined"!=o&&(a.projectMap[n][c][3]=o);var p=a.projectTaskDetails;for(var l in p)if(p.hasOwnProperty(l)&&l.contains(e+"_"+t)){var u=l.replace(e+"_"+t+"_","");a.projectTaskDetails[n+"_"+c+"_"+u]=p[l]}return a.projectMap[n][c]},r.deleteTaskInMap=function(e,t,n){for(var r,s=a.projectMap[e][t],o=4;o<s.length;o++)s[o]==n&&(r=o);var i,c=r+1,p=r-1,l=a.projectMap[e][t][c],u=a.projectMap[e][t][p];r==s.length-1&&(i="last"),4==r&&(i="first"),r>4&&r<s.length-1&&(i="normal"),4==r&&r==s.length-1&&(i="nothingToDelete");var f=Object.keys(a.projectMap[e]);f=f.filter(e=>e!==t||"mainLine"!==e);for(o=0;o<f.length;o++){if(a.projectMap[e][f[o]][2]==n)if("normal"==i)a.projectMap[e][f[o]][2]=u;else if("last"==i)a.projectMap[e][f[o]][2]=u;else if("first"==i)a.projectMap[e][f[o]][2]=l;else if("undefined"==i)return" nothing to delete";if(a.projectMap[e][f[o]][3]==n)if("normal"==i)a.projectMap[e][f[o]][3]=l;else if("last"==i)a.projectMap[e][f[o]][3]=u;else if("first"==i)a.projectMap[e][f[o]][3]=l;else if("undefined"==i)return" nothing to delete"}var d=a.projectTaskDetails;for(var j in d)d.hasOwnProperty(j)&&j==e+"_"+t+"_"+n&&delete d[j];s.splice(r,1),s[1]=s[1]-1},r.insertTaskInMap=function(e,n,r){var s=[];s=t(e);for(var o=s[n],i=a.projectMap[e][n],c=o+1,p=0,l=4;l<i.length;l++)i[l]>=c&&(c=i[l]+1),i[l]==r&&(p=l);return p>3?(i.splice(p+1,0,c),i[1]++,c):"Not possible to insert here.Try another position"},r.changeBranchLine=function(e,t,n,r,s){return"mainLine"==t?"You cannot change mainLine":0==a.projectMap.hasOwnProperty(e)?"The project does not exist":0==a.projectMap[e].hasOwnProperty(t)?"The branch does not exist":0==a.projectMap[e].hasOwnProperty(n)?"The newConnection does not exist":r>s?"Startpoint cannot be later than endpoint":(a.projectMap[e][t][0]=n,"undefined"!=r&&(a.projectMap[e][t][2]=r),"undefined"!=s&&(a.projectMap[e][t][3]=s),a.projectMap[e][t])},r.changeBranchPoint=function(e,t,n,r){var s;return"mainLine"!=t&&(1==r&&(n<=a.projectMap[e][t][3]?(a.projectMap[e][t][2]=n,s=n):s="Start point cannot be later than end point"),2==r&&(n>=a.projectMap[e][t][2]?(a.projectMap[e][t][3]=n,s=n):s="End point cannot be earlier than start point")),"mainLine"==t&&(s="mainLine cannot be rerouted"),s};const i=r.addBranch=function(t,n,r,s){var o,i=e(t);if(0==i)a.projectMap[t]={},a.projectMap[t].mainLine=["mainLine",0,"Start","Stop"],o="mainLine",a.projectBranches[t]="mainLine";else{var c=i[i.length-1];if(c.includes("branch")){var p=c.split("branch"),l=parseFloat(p[1])+1;o="branch"+l,a.projectMap[t]["branch"+l]=[n,0,r,s],a.projectBranches[t]=a.projectBranches[t]+",branch"+l}c.includes("mainLine")&&(o="branch1",a.projectMap[t].branch1=["mainLine",0,r,s],a.projectBranches[t]="mainLine,branch1")}return o};r.editTaskDetails=function(e,t,n,r){a.projectTaskDetails[t+"_"+n+"_"+r]={...a.projectTaskDetails[t+"_"+n+"_"+r],...e}},r.addTaskInMap=function(e,n){var r=[];r=t(e);var s=r[n],o=s+1;return a.projectMap[e][n].push(o),a.projectMap[e][n][1]++,o}})();