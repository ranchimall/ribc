(function(){function e(e){if(r.projectBranches.hasOwnProperty(e))var t=r.projectBranches[e].split(",");else t=!1;return t}function t(e){for(var t={},n=r.projectBranches[e].split(","),a=0;a<n.length;a++)t[n[a]]=r.projectMap[e][n[a]][1],"Stop"==t[n[a]]&&(t[n[a]]=0);return t}const n=window.RIBC={},a=n.admin={};n.init=function(e=!1){return new Promise((t,a)=>{Promise.all([n.refreshObjectData(),n.refreshGeneralData(e)]).then(e=>t(e)).catch(e=>a(e))})},n.refreshObjectData=(()=>new Promise((e,t)=>{floCloudAPI.requestObjectData("RIBC").then(t=>{floGlobals.appObjects.RIBC||(floGlobals.appObjects.RIBC={});var n=["projectMap","projectBranches","projectTaskDetails","projectDetails","internList","internRating","internsAssigned","projectTaskStatus","displayedTasks"];n.forEach(e=>{floGlobals.appObjects.RIBC[e]||(floGlobals.appObjects.RIBC[e]={}),r[e]=floGlobals.appObjects.RIBC[e]}),e("Object Data Refreshed Successfully")}).catch(e=>t(e))})),n.refreshGeneralData=(e=>new Promise((t,n)=>{var a=["InternUpdates"],r=[],s=[];(e?a:s).push("TaskRequests","InternRequests");let o=[];for(let e of a)o.push(floCloudAPI.requestGeneralData(e));for(let e of r)o.push(floCloudAPI.requestGeneralData(e,{senderID:floGlobals.subAdmins}));for(let e of s)o.push(floCloudAPI.requestGeneralData(e,{senderID:floDapps.user.id}));Promise.all(o).then(e=>t("General Data Refreshed Successfully")).catch(e=>n(e))}));const r={};n.applyForIntern=(e=>new Promise((t,n)=>{floCloudAPI.sendGeneralData(e,"InternRequests").then(e=>t(e)).catch(e=>n(e))})),n.postInternUpdate=(e=>new Promise((t,n)=>{floCloudAPI.sendGeneralData(e,"InternUpdates").then(e=>t(e)).catch(e=>n(e))})),n.getInternUpdates=function(e=null){let t=Object.values(floGlobals.generalDataset("InternUpdates")).map(e=>({floID:e.senderID,update:e.message,time:e.vectorClock.split("_")[0],note:e.note}));return t=t.filter(e=>e.floID in r.internList),t.reverse(),e&&e<t.length&&(t=t.slice(0,e)),t},a.commentInternUpdate=((e,t)=>new Promise((n,a)=>{if(!(e in floGlobals.generalDataset("InternUpdates")))return a("Intern update not found");floCloudAPI.noteApplicationData(e,t).then(e=>n(e)).catch(e=>a(e))})),n.applyForTask=(e=>new Promise((t,n)=>{floCloudAPI.sendGeneralData(e,"TaskRequests").then(e=>t(e)).catch(e=>n(e))})),n.getProjectList=(()=>Object.keys(r.projectMap)),n.getProjectDetails=(e=>r.projectDetails[e]),n.getProjectMap=(e=>r.projectMap[e]),n.getProjectBranches=(t=>e(t)),n.getTaskDetails=((e,t,n)=>r.projectTaskDetails[e+"_"+t+"_"+n]),n.getTaskStatus=((e,t,n)=>r.projectTaskStatus[e+"_"+t+"_"+n]),n.getInternList=(()=>r.internList),n.getInternRating=(e=>r.internRating[e]),n.getAssignedInterns=((e,t,n)=>r.internsAssigned[e+"_"+t+"_"+n]),n.getAllTasks=(()=>r.projectTaskDetails),n.getDisplayedTasks=(()=>floGlobals.appObjects.RIBC.displayedTasks),a.updateObjects=(()=>new Promise((e,t)=>{floCloudAPI.updateObjectData("RIBC").then(t=>e(t)).catch(e=>t(e))})),a.resetObjects=(()=>new Promise((e,t)=>{floCloudAPI.resetObjectData("RIBC").then(t=>e(t)).catch(e=>t(e))})),a.addProjectDetails=function(e,t){if(!(e in r.projectMap))return"Project not Found!";if(e in r.projectDetails&&"object"==typeof e&&"object"==typeof t)for(let n in t)r.projectDetails[e][n]=t[n];else r.projectDetails[e]=t;return"added project details for "+e},n.getInternRequests=function(e=!0){var t=Object.values(floGlobals.generalDataset("InternRequests")).map(e=>({floID:e.senderID,vectorClock:e.vectorClock,details:e.message,status:e.note}));return t=t.filter(e=>!(e.floID in r.internList)),e&&(t=t.filter(e=>!e.status)),t},a.processInternRequest=function(e,t=!0){let n=floGlobals.generalDataset("InternRequests")[e];return n?(a=t&&s(n.senderID,n.message[0])?"Accepted":"Rejected",floCloudAPI.noteApplicationData(e,a).then(e=>null).catch(e=>console.error(e)),a):"Request not found";var a};const s=a.addIntern=function(e,t){return!(e in r.internList)&&(r.internList[e]=t,r.internRating[e]=1,!0)};a.updateInternRating=function(e,t=0){return e in r.internList?(r.internRating[e]+=t,"Intern rating Updated"):"Intern not found!"},n.getTaskRequests=function(e=!0){var t=Object.values(floGlobals.generalDataset("TaskRequests")).map(e=>({floID:e.senderID,vectorClock:e.vectorClock,details:e.message,status:e.note}));try{floDapps.user.id&&!floGlobals.subAdmins.includes(floDapps.user.id)&&(t=t.filter(e=>e.floID===floDapps.user.id))}catch(e){return[]}return e&&(t=t.filter(e=>!e.status)),t},a.processTaskRequest=function(e,t=!0){let n=floGlobals.generalDataset("TaskRequests")[e];if(!n)return"Request not found";const{message:{taskId:a,name:r},senderID:i}=n,[c,p,l]=a.split("_");var u;return s(i,r),u=t&&o(i,c,p,l)?"Accepted":"Rejected",floCloudAPI.noteApplicationData(e,u).then(e=>null).catch(e=>console.error(e)),u};const o=a.assignInternToTask=function(e,t,n,a){var s=t+"_"+n+"_"+a;return Array.isArray(r.internsAssigned[s])||(r.internsAssigned[s]=[]),!r.internsAssigned[s].includes(e)&&(r.internsAssigned[s].push(e),!0)};a.unassignInternFromTask=function(e,t,n,a){const s=t+"_"+n+"_"+a;r.internsAssigned[s]=r.internsAssigned[s].filter(t=>t!=e)},a.putTaskStatus=function(e,t,n,a){r.projectTaskStatus[t+"_"+n+"_"+a]=e},a.setDisplayedTasks=function(e=[]){floGlobals.appObjects.RIBC.displayedTasks=e},a.createProject=function(e){return e in r.projectMap?"Project Name already exists":(i(e),"Project Create: "+e)},a.copyBranchToNewProject=function(e,t,n,a,s,o){if("mainLine"==t)return"You cannot change mainLine";if(0==r.projectMap.hasOwnProperty(n))return"The project does not exist";if(0==r.projectMap[n].hasOwnProperty(c))return"The branch does not exist";if(s>o)return"Startpoint cannot be later than endpoint";var c=i(n,a,s,o);r.projectMap[n][c]=r.projectMap[e][t].slice(),r.projectMap[n][c][0]="undefined"==a?"mainLine":"newBranchConnection","undefined"!=s&&(r.projectMap[n][c][2]=s),"undefined"!=o&&(r.projectMap[n][c][3]=o);var p=r.projectTaskDetails;for(var l in p)if(p.hasOwnProperty(l)&&l.contains(e+"_"+t)){var u=l.replace(e+"_"+t+"_","");r.projectTaskDetails[n+"_"+c+"_"+u]=p[l]}return r.projectMap[n][c]},a.deleteTaskInMap=function(e,t,n){for(var a,s=r.projectMap[e][t],o=4;o<s.length;o++)s[o]==n&&(a=o);var i,c=a+1,p=a-1,l=r.projectMap[e][t][c],u=r.projectMap[e][t][p];a==s.length-1&&(i="last"),4==a&&(i="first"),a>4&&a<s.length-1&&(i="normal"),4==a&&a==s.length-1&&(i="nothingToDelete");var f=Object.keys(r.projectMap[e]);f=f.filter(e=>e!==t||"mainLine"!==e);for(o=0;o<f.length;o++){if(r.projectMap[e][f[o]][2]==n)if("normal"==i)r.projectMap[e][f[o]][2]=u;else if("last"==i)r.projectMap[e][f[o]][2]=u;else if("first"==i)r.projectMap[e][f[o]][2]=l;else if("undefined"==i)return" nothing to delete";if(r.projectMap[e][f[o]][3]==n)if("normal"==i)r.projectMap[e][f[o]][3]=l;else if("last"==i)r.projectMap[e][f[o]][3]=u;else if("first"==i)r.projectMap[e][f[o]][3]=l;else if("undefined"==i)return" nothing to delete"}var d=r.projectTaskDetails;for(var j in d)d.hasOwnProperty(j)&&j==e+"_"+t+"_"+n&&delete d[j];s.splice(a,1),s[1]=s[1]-1},a.insertTaskInMap=function(e,n,a){var s=[];s=t(e);for(var o=s[n],i=r.projectMap[e][n],c=o+1,p=0,l=4;l<i.length;l++)i[l]>=c&&(c=i[l]+1),i[l]==a&&(p=l);return p>3?(i.splice(p+1,0,c),i[1]++,c):"Not possible to insert here.Try another position"},a.changeBranchLine=function(e,t,n,a,s){return"mainLine"==t?"You cannot change mainLine":0==r.projectMap.hasOwnProperty(e)?"The project does not exist":0==r.projectMap[e].hasOwnProperty(t)?"The branch does not exist":0==r.projectMap[e].hasOwnProperty(n)?"The newConnection does not exist":a>s?"Startpoint cannot be later than endpoint":(r.projectMap[e][t][0]=n,"undefined"!=a&&(r.projectMap[e][t][2]=a),"undefined"!=s&&(r.projectMap[e][t][3]=s),r.projectMap[e][t])},a.changeBranchPoint=function(e,t,n,a){var s;return"mainLine"!=t&&(1==a&&(n<=r.projectMap[e][t][3]?(r.projectMap[e][t][2]=n,s=n):s="Start point cannot be later than end point"),2==a&&(n>=r.projectMap[e][t][2]?(r.projectMap[e][t][3]=n,s=n):s="End point cannot be earlier than start point")),"mainLine"==t&&(s="mainLine cannot be rerouted"),s};const i=a.addBranch=function(t,n,a,s){var o,i=e(t);if(0==i)r.projectMap[t]={},r.projectMap[t].mainLine=["mainLine",0,"Start","Stop"],o="mainLine",r.projectBranches[t]="mainLine";else{var c=i[i.length-1];if(c.includes("branch")){var p=c.split("branch"),l=parseFloat(p[1])+1;o="branch"+l,r.projectMap[t]["branch"+l]=[n,0,a,s],r.projectBranches[t]=r.projectBranches[t]+",branch"+l}c.includes("mainLine")&&(o="branch1",r.projectMap[t].branch1=["mainLine",0,a,s],r.projectBranches[t]="mainLine,branch1")}return o};a.editTaskDetails=function(e,t,n,a){r.projectTaskDetails[t+"_"+n+"_"+a]={...r.projectTaskDetails[t+"_"+n+"_"+a],...e}},a.addTaskInMap=function(e,n){var a=[];a=t(e);var s=a[n],o=s+1;return r.projectMap[e][n].push(o),r.projectMap[e][n][1]++,o}})();